/* Progress page specific styling for Solo Leveling theme */
@import 'styles.css';

/* Progress Container */
.progress-container {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: 2.5rem 1.5rem;
  animation: fadeIn 0.5s ease-out;
}

/* Progress Header */
.progress-header {
  background-color: var(--sl-window-bg);
  border: 1px solid var(--sl-border);
  border-radius: 0.375rem;
  padding: 2rem;
  margin-bottom: 2.5rem;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.progress-header::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background: linear-gradient(90deg, transparent, var(--sl-blue), transparent);
}

.progress-header::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--sl-blue), transparent);
  animation: borderFlow 2s infinite;
}

.progress-title {
  color: var(--sl-blue);
  font-size: 2rem;
  font-weight: 600;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 1rem;
  letter-spacing: 0.5px;
}

.progress-title-icon {
  color: var(--sl-blue);
  font-size: 1.75rem;
  filter: drop-shadow(0 0 6px var(--sl-glow));
}

.progress-subtitle {
  color: var(--sl-text-secondary);
  font-size: 1.1rem;
  max-width: 700px;
  line-height: 1.6;
}

/* Progress Layout */
.progress-layout {
  display: flex;
  gap: 2.5rem;
}

/* Progress Overview */
.progress-overview {
  flex: 1;
}

/* Tab Navigation */
.progress-tabs {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 2rem;
  background-color: var(--sl-window-bg);
  border: 1px solid var(--sl-border);
  border-radius: 0.375rem;
  padding: 0.5rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden;
}

.progress-tabs::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background: linear-gradient(90deg, transparent, var(--sl-blue), transparent);
}

.progress-tab {
  padding: 0.75rem 1.25rem;
  background-color: transparent;
  border: none;
  color: var(--sl-text);
  font-weight: 500;
  cursor: pointer;
  border-radius: 0.25rem;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.progress-tab:hover {
  color: var(--sl-blue);
  background-color: rgba(0, 168, 255, 0.05);
}

.progress-tab::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 168, 255, 0.1);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease;
}

.progress-tab:hover::before {
  transform: scaleX(1);
  transform-origin: left;
}

.progress-tab.active {
  color: var(--sl-blue);
  background-color: rgba(0, 168, 255, 0.1);
  box-shadow: 0 0 10px rgba(0, 168, 255, 0.3);
}

.progress-tab.active::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: var(--sl-blue);
  animation: glowPulse 2s infinite;
}

/* Tab Sections */
.progress-section {
  display: none;
}

.progress-section.active {
  display: block;
  animation: fadeIn 0.5s ease-out;
}

/* Activity Tab */
.activity-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
}

.activity-card {
  background-color: var(--sl-window-bg);
  border: 1px solid var(--sl-border);
  border-radius: 0.375rem;
  overflow: hidden;
  position: relative;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.activity-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background: linear-gradient(90deg, transparent, var(--sl-blue), transparent);
}

.activity-card::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, rgba(0, 168, 255, 0.1) 0%, transparent 70%);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
  z-index: 1;
}

.activity-card:hover::after {
  opacity: 1;
}

.activity-card:hover {
  transform: translateY(-0.35rem);
  box-shadow: 0 0.6rem 1.25rem rgba(0, 0, 0, 0.15);
  border-color: var(--sl-border-hover);
}

.activity-header {
  padding: 1.5rem;
  border-bottom: 1px solid var(--sl-border);
}

.activity-name {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--sl-blue);
  margin-bottom: 0.5rem;
}

.activity-date {
  color: var(--sl-text-secondary);
  font-size: 0.9rem;
}

.activity-content {
  padding: 1.5rem;
}

.activity-stat {
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
}

.activity-stat:last-child {
  margin-bottom: 0;
}

.activity-stat-label {
  color: var(--sl-text-secondary);
}

.activity-stat-value {
  color: var(--sl-text);
  font-weight: 500;
}

.activity-stat-value.highlight {
  color: var(--sl-blue);
  font-weight: 600;
  text-shadow: 0 0 5px var(--sl-glow);
  position: relative;
}

.activity-stat-value.highlight::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 2px;
  bottom: -2px;
  left: 0;
  background-color: var(--sl-blue);
  animation: glowPulse 2s infinite;
}

/* Stats Tab */
.stats-charts {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 2rem;
  margin-bottom: 2rem;
}

.chart-container {
  background-color: var(--sl-window-bg);
  border: 1px solid var(--sl-border);
  border-radius: 0.375rem;
  padding: 1.5rem;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.chart-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background: linear-gradient(90deg, transparent, var(--sl-blue), transparent);
}

.chart-container.loading::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(10, 12, 27, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
  animation: fadeIn 0.3s ease-out;
}

.chart-container.loading::before {
  content: 'Loading data...';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--sl-blue);
  font-size: 1.2rem;
  font-weight: 600;
  z-index: 11;
  animation: textFlicker 2s infinite;
}

.chart-title {
  font-size: 1.1rem;
  color: var(--sl-blue);
  margin-bottom: 1rem;
  font-weight: 600;
}

.chart-wrapper {
  height: 250px;
  position: relative;
}

.chart-wrapper canvas {
  animation: fadeIn 0.8s ease-out;
}

.stats-summary {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1.5rem;
}

.summary-card {
  background-color: var(--sl-window-bg);
  border: 1px solid var(--sl-border);
  border-radius: 0.375rem;
  padding: 1.25rem;
  text-align: center;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;
}

.summary-card:hover {
  transform: translateY(-0.35rem);
}

.summary-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background: linear-gradient(90deg, transparent, var(--sl-blue), transparent);
}

.summary-card.leveling-up::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, rgba(0, 168, 255, 0.2) 0%, transparent 70%);
  animation: fadeIn 0.5s ease-out, fadeOut 0.5s ease-in 0.5s forwards;
  pointer-events: none;
}

.summary-value {
  font-size: 2rem;
  font-weight: 700;
  color: var(--sl-blue);
  margin-bottom: 0.5rem;
  text-shadow: 0 0 5px var(--sl-glow);
  position: relative;
}

.summary-value.sl-animate-level-up {
  animation: levelUp 1s ease;
}

.summary-label {
  color: var(--sl-text-secondary);
  font-size: 0.95rem;
}

/* Achievements Tab */
.achievements-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 1.5rem;
}

.achievement-card {
  background-color: var(--sl-window-bg);
  border: 1px solid var(--sl-border);
  border-radius: 0.375rem;
  overflow: hidden;
  position: relative;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.achievement-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background: linear-gradient(90deg, transparent, var(--sl-blue), transparent);
}

.achievement-card:hover {
  transform: translateY(-0.35rem);
  box-shadow: 0 0.6rem 1.25rem rgba(0, 0, 0, 0.15);
  border-color: var(--sl-border-hover);
}

.achievement-card.new::after {
  content: 'NEW';
  position: absolute;
  top: 1rem;
  right: 1rem;
  background-color: var(--sl-blue);
  color: var(--sl-text);
  font-size: 0.7rem;
  font-weight: 600;
  padding: 0.2rem 0.5rem;
  border-radius: 0.75rem;
  box-shadow: 0 0 8px var(--sl-glow);
  animation: pulse 2s infinite;
}

.achievement-icon {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
  background-color: rgba(0, 168, 255, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem;
  color: var(--sl-blue);
  font-size: 2rem;
  border: 1px solid var(--sl-border);
  box-shadow: 0 0 15px rgba(0, 168, 255, 0.2);
}

.achievement-icon.sl-animate-skill-activate {
  animation: skillActivationGlow 1.2s ease-in-out;
}

.achievement-name {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--sl-text);
  margin-bottom: 0.5rem;
}

.achievement-description {
  color: var(--sl-text-secondary);
  font-size: 0.9rem;
  margin-bottom: 1rem;
}

.achievement-progress {
  width: 100%;
  margin-bottom: 0.75rem;
}

.achievement-stats {
  color: var(--sl-blue);
  font-size: 0.85rem;
  font-weight: 500;
}

.achievement-card.locked {
  opacity: 0.7;
  filter: grayscale(70%);
}

.achievement-card.locked .achievement-icon {
  background-color: rgba(160, 160, 160, 0.1);
  color: var(--sl-text-secondary);
}

.achievement-card.locked .achievement-name {
  color: var(--sl-text-secondary);
}

/* Responsive Design */
@media (max-width: 992px) {
  .progress-layout {
    flex-direction: column;
  }
  
  .stats-charts {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .progress-header {
    padding: 1.5rem;
  }
  
  .progress-tabs {
    overflow-x: auto;
    white-space: nowrap;
    padding-bottom: 0.25rem;
  }
  
  .progress-tab {
    padding: 0.5rem 1rem;
  }
  
  .activity-grid {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 576px) {
  .progress-container {
    padding: 1.5rem 1rem;
  }
  
  .stats-summary {
    grid-template-columns: 1fr;
  }
  
  .achievements-grid {
    grid-template-columns: 1fr;
  }
}

/* Animation for the progress charts */
@keyframes chartLoad {
  0% { transform: scaleY(0); opacity: 0; }
  100% { transform: scaleY(1); opacity: 1; }
}

.chart-bar {
  animation: chartLoad 0.8s ease-out backwards;
}

/* Staggered loading for chart bars */
.chart-bar:nth-child(1) { animation-delay: 0.1s; }
.chart-bar:nth-child(2) { animation-delay: 0.15s; }
.chart-bar:nth-child(3) { animation-delay: 0.2s; }
.chart-bar:nth-child(4) { animation-delay: 0.25s; }
.chart-bar:nth-child(5) { animation-delay: 0.3s; }
.chart-bar:nth-child(6) { animation-delay: 0.35s; }
.chart-bar:nth-child(7) { animation-delay: 0.4s; }

/* Animation for achievement unlock */
@keyframes achievementUnlock {
  0% { transform: scale(0.8); opacity: 0; filter: brightness(0.5); }
  50% { transform: scale(1.1); opacity: 1; filter: brightness(1.5); }
  100% { transform: scale(1); opacity: 1; filter: brightness(1); }
}

.achievement-card.unlocking {
  animation: achievementUnlock 1s ease-out forwards;
}

/* Animation for stats that increase */
@keyframes statIncrease {
  0% { color: var(--sl-text); }
  50% { color: var(--sl-green); transform: scale(1.1); }
  100% { color: var(--sl-text); transform: scale(1); }
}

.stat-increasing {
  animation: statIncrease 1s ease-out;
}

/* Loading animation for data retrieval */
@keyframes dataLoading {
  0% { opacity: 0.3; }
  50% { opacity: 0.8; }
  100% { opacity: 0.3; }
}

.data-loading {
  position: relative;
  overflow: hidden;
}

.data-loading::after {
  content: 'Retrieving data...';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(10, 12, 27, 0.8);
  color: var(--sl-blue);
  font-weight: 500;
  animation: dataLoading 1.5s infinite;
} 